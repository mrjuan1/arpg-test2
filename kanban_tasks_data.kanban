{
	"categories": [
		{
			"uuid": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"title": "Task",
			"color": "babbf1"
		}
	],
	"stages": [
		{
			"uuid": "2a75b23c-581f-406d-9295-910813872bed",
			"title": "Todo",
			"tasks": [
				"1d4a84e3-80f0-4bfa-9f4e-dc8ded043bf8",
				"3280b4ad-3dbf-4e9c-b1d8-b574f7e5b1a2",
				"1a0a878c-f167-4b56-9199-e9024cfb4ef6",
				"967222d2-d78b-441c-a5ec-a928427fe9b5",
				"33b186ee-1be9-494a-ac26-9a5938bad7bd"
			]
		},
		{
			"uuid": "7eef13de-40bd-46c5-9947-055715090f4d",
			"title": "Doing",
			"tasks": [
				"d0b41172-e4ef-4693-bae4-1a538237c18e"
			]
		},
		{
			"uuid": "cfd612a1-151a-4ac6-a306-f10c05e2b58d",
			"title": "Done",
			"tasks": [
				"6494383d-b879-49ef-9255-22acde51c312",
				"3a242825-86c5-4dc7-b99a-46961716e040",
				"90334d96-26ac-4cdc-92a5-8ab521ed3bd5",
				"3c199eeb-d611-47cf-bbe6-8978db7265d1",
				"ed64d58e-61ba-46ff-9e5b-bcba35ed5a4c",
				"243e4625-afef-4e13-b4d3-1db28f077bed",
				"ea5b2667-739a-4046-afd6-bbc06db56357",
				"87ff376d-0bbb-454d-b168-4559ada615f3",
				"d37b7333-ebab-4dcb-a4d1-39294b1a4b93",
				"0b190117-e9a2-4cc1-859d-5c6fc5f9d289",
				"d026ddca-9083-462b-9725-df63376858a5",
				"cdddbf03-c8c2-4699-ae23-1db936d14273"
			]
		}
	],
	"tasks": [
		{
			"uuid": "cdddbf03-c8c2-4699-ae23-1db936d14273",
			"title": "Create shared character logic",
			"description": "Create character logic that can be shared between the player, enemies, companions and NPCs.",
			"category": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"steps": [
				{
					"details": "Define tasks for logic",
					"done": true
				},
				{
					"details": "Add descriptions to tasks",
					"done": true
				},
				{
					"details": "Implement tasks",
					"done": true
				}
			]
		},
		{
			"uuid": "0b190117-e9a2-4cc1-859d-5c6fc5f9d289",
			"title": "Jumping",
			"description": "Jumping can only be initiated when on the floor. It sets the character's Y velocity to an exported value. If a jump input is pressed while in air and below a certain velocity, a double-jump will be performed. This can only happen once per-jump.\n\nJumping will use an exported amount of stamina. Double-jumping will use a separate exported amount of stamina.",
			"category": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"steps": []
		},
		{
			"uuid": "87ff376d-0bbb-454d-b168-4559ada615f3",
			"title": "Dodging",
			"description": "Dodging uses a specified amount of stamina to launch the character in a specific direction. While dodging, the character is also invincible.\n\nScrap below, changed to use a timer instead of a minimum velocity/speed\n---\n\nsupply character\nadd bool for \"busy dodging\"\n---\nexport dodge speed\nexport array of ray casts for dodge direction of velocity is zero\nexport min dodging velocity threshold\n---\ndodge function:\ncheck if not already dodging...\nget character velocity normalised\nif zero...\npick randomly from an exported array of rays until all have been tried\ncheck each for a collision\nthe first one without a collision will be used as the dodge direction\nif none are available, just pick a random one and use it anyway\n...end if\nscale the dodge direction by the exported dodge speed value\nset character velocity to dodge direction\nset doding to true\n---\nis dodging function:\ncheck if dodging and character velocity is above the dodging threshold...\nif above, return true, otherwise ste dodging to false and return false\n...else return false",
			"category": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"steps": [
				{
					"details": "Create dodging class with character parameter",
					"done": true
				},
				{
					"details": "Add parameters for doding speed and array of ray casts",
					"done": true
				},
				{
					"details": "Add local private var for tracking dodging",
					"done": true
				},
				{
					"details": "Add minimum dodging velocity",
					"done": true
				},
				{
					"details": "Add function to check if dodging",
					"done": true
				},
				{
					"details": "Add dodge function",
					"done": true
				}
			]
		},
		{
			"uuid": "ea5b2667-739a-4046-afd6-bbc06db56357",
			"title": "Attacking",
			"description": "Melee attacks consist of triggered combos, each getting weaker, and each requiring less stamina to perform. Each combo can be charged-up with an extra stamina cost too to make them stronger or trigger a stagger/knockback. Character cannot move while charging attacks. In air, charge attacks cannot be performed and each attack combo will use much more stamina to keep the character in the air.\n\n---\nexport initial strength\nexport initial strength charge rate\nexport initial strength max charge\nexport initial strength reduction\nexport strength reduction factor\n---\ndefine strength charge\n---\ncharge attack function: (delta)\nincrease strength charge\nif max charge is reached, adjust strength and release attack\n---\nrelease attack function:\nfire attack signal with strength\nreduce strength, charge rate and max charge by their respective reduction values\nlower reduction values by their respective reduction factors\nif combo is zero, start combo timer\nincrease combo\n---\ncombo timer timeout:\nreset combo",
			"category": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"steps": [
				{
					"details": "Add exports for initial strength, charge rate and max charge",
					"done": true
				},
				{
					"details": "Add exports for reduction factors",
					"done": true
				},
				{
					"details": "Add exports for reduction decrememnts",
					"done": true
				},
				{
					"details": "Add export for max combos (0 is infinite)",
					"done": true
				},
				{
					"details": "Add export for attack timer",
					"done": true
				},
				{
					"details": "Define variable for strength charge and combo",
					"done": true
				},
				{
					"details": "Define signal for released attack",
					"done": true
				},
				{
					"details": "Add charge and release attack functions",
					"done": true
				},
				{
					"details": "Further integrate with character",
					"done": true
				}
			]
		},
		{
			"uuid": "ed64d58e-61ba-46ff-9e5b-bcba35ed5a4c",
			"title": "Stamina",
			"description": "",
			"category": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"steps": []
		},
		{
			"uuid": "1d4a84e3-80f0-4bfa-9f4e-dc8ded043bf8",
			"title": "Experience and levelling",
			"description": "",
			"category": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"steps": []
		},
		{
			"uuid": "3280b4ad-3dbf-4e9c-b1d8-b574f7e5b1a2",
			"title": "Magic stats",
			"description": "",
			"category": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"steps": []
		},
		{
			"uuid": "1a0a878c-f167-4b56-9199-e9024cfb4ef6",
			"title": "Projectiles",
			"description": "",
			"category": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"steps": []
		},
		{
			"uuid": "d026ddca-9083-462b-9725-df63376858a5",
			"title": "Movement",
			"description": "functions:\nset direction - takes a vector2\nexpose movement speed\nexpose moving bool\n---\nexport starting movement speed\nset original movement speed to starting movement speed\nset current movement speed to original movement speed\nalways lerp current movement speed to original movement speed\nexport movement speed lerp speed\nexport movement speed air-dampening factor?\n---\nset target velocity to vec2 zero\nset target y rotation to current y rotation\nexport velocity lerp speed\nexport y rotation lerp speed\nexport velocity air-dampening factor\nexport y rotation air-dampening factor\n---\nexport gravity multiplier\nset gravity to project settings gravity value times the gravity multiplier\n---\nexport bool for deriving velocity from target y rotation instead of current y rotation\n---\nset direction function:\nset target y rotation to atan of direction vector\n---\nphysics process function:\nscale all lerp values by delta\nif not on ground...\ndecrease y velocity by gravity times delta\nscale all lerp speeds by their air-dampening values\n...end if\nif moving...\nget directional vector from target or current y rotation depening on a setting\nscale the directional vector by the current movement speed\nset the target velocity to the result\n...else...\nset the target velocity to zero\n...end if\nlerp movement speed, velocity and y rotation\nmove and slide\n---",
			"category": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"steps": []
		},
		{
			"uuid": "d37b7333-ebab-4dcb-a4d1-39294b1a4b93",
			"title": "Camera",
			"description": "",
			"category": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"steps": [
				{
					"details": "Add jumping-related logic",
					"done": true
				}
			]
		},
		{
			"uuid": "243e4625-afef-4e13-b4d3-1db28f077bed",
			"title": "Fix moving too quickly while in air",
			"description": "",
			"category": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"steps": []
		},
		{
			"uuid": "33b186ee-1be9-494a-ac26-9a5938bad7bd",
			"title": "Tweak melee parameters",
			"description": "",
			"category": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"steps": []
		},
		{
			"uuid": "967222d2-d78b-441c-a5ec-a928427fe9b5",
			"title": "Re-look at movement class and remove unneeded public variables",
			"description": "",
			"category": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"steps": []
		},
		{
			"uuid": "6494383d-b879-49ef-9255-22acde51c312",
			"title": "Shared stats (STR, DEF)",
			"description": "",
			"category": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"steps": []
		},
		{
			"uuid": "3a242825-86c5-4dc7-b99a-46961716e040",
			"title": "HP",
			"description": "Mostly a copy of stamina, but with a killed signal and no auto-recovery",
			"category": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"steps": [
				{
					"details": "Integrate with character",
					"done": true
				}
			]
		},
		{
			"uuid": "3c199eeb-d611-47cf-bbe6-8978db7265d1",
			"title": "Fall damage",
			"description": "",
			"category": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"steps": []
		},
		{
			"uuid": "90334d96-26ac-4cdc-92a5-8ab521ed3bd5",
			"title": "Separate player and character logic",
			"description": "New character class extending Character3D, implementing existing classes that can be shared between the player and NPCs. Additionally, a new player class extending the previously-mentioned character class. This will implement the remaining player-specific classes.\n\nNext would be an NPC class extending the character one, implementing NPC-specific classes (if there end up being any). Additionally, a \"lite\" NPC class can be created for NPCs like villagers who will never be involved in combat and cannot be killed (basically just movement).",
			"category": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"steps": [
				{
					"details": "Create a character class extending Character3D",
					"done": true
				},
				{
					"details": "Implement classes that can be shared between player and NPCs",
					"done": true
				},
				{
					"details": "Create a player class that extends the above-created character one",
					"done": true
				}
			]
		},
		{
			"uuid": "d0b41172-e4ef-4693-bae4-1a538237c18e",
			"title": "Enemy class",
			"description": "Create an enemy class extending the capsule character one, then setup an enemy node using this class.",
			"category": "37e9d004-6922-40bc-8ba9-3ca3701c1ca5",
			"steps": [
				{
					"details": "Create enemy class, extending capsule character",
					"done": false
				},
				{
					"details": "Setup enemy node suing enemy class",
					"done": false
				}
			]
		}
	],
	"layout": {
		"columns": [
			[
				"2a75b23c-581f-406d-9295-910813872bed"
			],
			[
				"7eef13de-40bd-46c5-9947-055715090f4d"
			],
			[
				"cfd612a1-151a-4ac6-a306-f10c05e2b58d"
			]
		]
	}
}